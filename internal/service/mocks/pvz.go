// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/pvz.go
//
// Generated by this command:
//
//	mockgen -source=internal/handler/pvz.go -destination=internal/service/mocks/pvz.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	response "github.com/alexey-shedrin/avito-test-task/internal/model/dto/response"
	entity "github.com/alexey-shedrin/avito-test-task/internal/model/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockPvzService is a mock of PvzService interface.
type MockPvzService struct {
	ctrl     *gomock.Controller
	recorder *MockPvzServiceMockRecorder
	isgomock struct{}
}

// MockPvzServiceMockRecorder is the mock recorder for MockPvzService.
type MockPvzServiceMockRecorder struct {
	mock *MockPvzService
}

// NewMockPvzService creates a new mock instance.
func NewMockPvzService(ctrl *gomock.Controller) *MockPvzService {
	mock := &MockPvzService{ctrl: ctrl}
	mock.recorder = &MockPvzServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPvzService) EXPECT() *MockPvzServiceMockRecorder {
	return m.recorder
}

// CreatePvz mocks base method.
func (m *MockPvzService) CreatePvz(pvz *entity.Pvz) (*entity.Pvz, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePvz", pvz)
	ret0, _ := ret[0].(*entity.Pvz)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePvz indicates an expected call of CreatePvz.
func (mr *MockPvzServiceMockRecorder) CreatePvz(pvz any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePvz", reflect.TypeOf((*MockPvzService)(nil).CreatePvz), pvz)
}

// GetPvz mocks base method.
func (m *MockPvzService) GetPvz(startDate, endDate *time.Time, page, limit *int) ([]response.PvzInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPvz", startDate, endDate, page, limit)
	ret0, _ := ret[0].([]response.PvzInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPvz indicates an expected call of GetPvz.
func (mr *MockPvzServiceMockRecorder) GetPvz(startDate, endDate, page, limit any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPvz", reflect.TypeOf((*MockPvzService)(nil).GetPvz), startDate, endDate, page, limit)
}
